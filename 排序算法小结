写在前面：
时间空间为O(1)表示额外空间的占用不随数组大小n而变化。
以下说的时间复杂度都是平均时间复杂度。

冒泡排序
思想：
数组大小为n
遍历n-1趟，第i次遍历时从头开始，将数组中第i大的数冒到最后
复杂度:
时间O(n^2),空间O(1)

插入排序：
思想：
遍历数组,与前面已经排好序的m个数组从右往左依次比较，如果小于则交换位置，直到插入到正确的位置。
复杂度：
时间O(n^2)

堆排序

归并排序
思想：
用递归实现，每次将当前数组的左二分之一和右二分之一分别排序，再将左右子数组Merge。
递归返回的条件是传入的两个数组长度为1或0.
复杂度：
T(n) = T(n/2) + T(n/2) + O(n)-->O(nlogn)

快速排序
思想：
1）选择一个元素q（如数组最后一个元素），初始选择0,len(arr)-1作为左右指针下标left,right.
2）left从左往右找到第一个大于q的元素，与q交换，
3）right从右往左边找到第一个小于q的元素与之交换，（这时left,right都移动到新的位置了）
4）若left,right不相等，继续2),3)步，若相等，递归对左子数组和右子数组执行
